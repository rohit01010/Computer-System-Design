//8 bit adder subtractor
CHIP AdderSubtractor8Bit {
IN x[8],y[8],a,signed;
OUT out[8],of;
PARTS:
Not(in=a,out=nota);
Xor(a=y[0],b=nota,out=y0);
Xor(a=y[1],b=nota,out=y1);
Xor(a=y[2],b=nota,out=y2);
Xor(a=y[3],b=nota,out=y3);
Xor(a=y[4],b=nota,out=y4);
Xor(a=y[5],b=nota,out=y5);
Xor(a=y[6],b=nota,out=y6);
Xor(a=y[7],b=nota,out=y7);

//CLA based addition
CLA4Bit(c0=nota,X[0]=x[0],X[1]=x[1],X[2]=x[2],X[3]=x[3],Y[0]=y0,Y[1]=y1,Y[2]=y2,Y[3]=y3,S[0]=out[0],S[1]=out[1],S[2]= out[2],S[3]=out[3],c3=C3,c4=C4);
CLA4Bit(c0=C4,X[0]=x[4],X[1]=x[5],X[2]=x[6],X[3]=x[7],Y[0]=y4,Y[1]=y5,Y[2]=y6,Y[3]=y7,S[0]=out[4],S[1]=out[5],S[2]=out[6],S[3]=out[7],c3=C7,c4=C8);

//Overflow detection
And(a=C7,b=signed,out=C7andsigned);
Not(in=signed,out=notsigned);
And(a=notsigned,b=nota,out=notsignedAndnota);
Xor(a=notsignedAndnota,b=C7andsigned,out=t);
Xor(a=t,b=C8,out=of);
}